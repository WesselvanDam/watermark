import 'package:flutter/material.dart';

TextTheme createTextTheme(BuildContext context) {
  return Theme.of(context).textTheme.apply(
        fontFamily: 'Roboto',
      );
}

class MaterialTheme {
  const MaterialTheme(this.textTheme);
  final TextTheme textTheme;

  ThemeData theme(ColorScheme colorScheme) => ThemeData(
        useMaterial3: true,
        brightness: colorScheme.brightness,
        colorScheme: colorScheme,
        textTheme: textTheme.apply(
          bodyColor: colorScheme.onSurface,
          displayColor: colorScheme.onSurface,
        ),
        scaffoldBackgroundColor: colorScheme.surface,
        canvasColor: colorScheme.surface,
      );

  static ColorScheme lightScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff745086),
      surfaceTint: Color(0xff745086),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xfff6d9ff),
      onPrimaryContainer: Color(0xff2c0b3e),
      secondary: Color(0xff68596d),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xfff0dcf4),
      onSecondaryContainer: Color(0xff231728),
      tertiary: Color(0xff815252),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xffffdad9),
      onTertiaryContainer: Color(0xff331112),
      error: Color(0xffba1a1a),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffffdad6),
      onErrorContainer: Color(0xff410002),
      surface: Color(0xfffff7fc),
      onSurface: Color(0xff1e1a1f),
      onSurfaceVariant: Color(0xff4b444d),
      outline: Color(0xff7d747e),
      outlineVariant: Color(0xffcec3ce),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff342f35),
      inversePrimary: Color(0xffe2b7f4),
      primaryFixed: Color(0xfff6d9ff),
      onPrimaryFixed: Color(0xff2c0b3e),
      primaryFixedDim: Color(0xffe2b7f4),
      onPrimaryFixedVariant: Color(0xff5b396d),
      secondaryFixed: Color(0xfff0dcf4),
      onSecondaryFixed: Color(0xff231728),
      secondaryFixedDim: Color(0xffd3c0d8),
      onSecondaryFixedVariant: Color(0xff504255),
      tertiaryFixed: Color(0xffffdad9),
      onTertiaryFixed: Color(0xff331112),
      tertiaryFixedDim: Color(0xfff5b7b7),
      onTertiaryFixedVariant: Color(0xff663b3b),
      surfaceDim: Color(0xffe0d7df),
      surfaceBright: Color(0xfffff7fc),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfffaf1f8),
      surfaceContainer: Color(0xfff5ebf3),
      surfaceContainerHigh: Color(0xffefe5ed),
      surfaceContainerHighest: Color(0xffe9e0e7),
    );
  }

  ThemeData light() {
    return theme(lightScheme());
  }

  static ColorScheme lightMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff573568),
      surfaceTint: Color(0xff745086),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff8c669e),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff4c3e51),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff7f6f84),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff623737),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff9a6767),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff8c0009),
      onError: Color(0xffffffff),
      errorContainer: Color(0xffda342e),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffff7fc),
      onSurface: Color(0xff1e1a1f),
      onSurfaceVariant: Color(0xff474149),
      outline: Color(0xff645d65),
      outlineVariant: Color(0xff817881),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff342f35),
      inversePrimary: Color(0xffe2b7f4),
      primaryFixed: Color(0xff8c669e),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff724e83),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff7f6f84),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff66576b),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff9a6767),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff7e4f50),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffe0d7df),
      surfaceBright: Color(0xfffff7fc),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfffaf1f8),
      surfaceContainer: Color(0xfff5ebf3),
      surfaceContainerHigh: Color(0xffefe5ed),
      surfaceContainerHighest: Color(0xffe9e0e7),
    );
  }

  ThemeData lightMediumContrast() {
    return theme(lightMediumContrastScheme());
  }

  static ColorScheme lightHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.light,
      primary: Color(0xff331345),
      surfaceTint: Color(0xff745086),
      onPrimary: Color(0xffffffff),
      primaryContainer: Color(0xff573568),
      onPrimaryContainer: Color(0xffffffff),
      secondary: Color(0xff2a1e2f),
      onSecondary: Color(0xffffffff),
      secondaryContainer: Color(0xff4c3e51),
      onSecondaryContainer: Color(0xffffffff),
      tertiary: Color(0xff3b1718),
      onTertiary: Color(0xffffffff),
      tertiaryContainer: Color(0xff623737),
      onTertiaryContainer: Color(0xffffffff),
      error: Color(0xff4e0002),
      onError: Color(0xffffffff),
      errorContainer: Color(0xff8c0009),
      onErrorContainer: Color(0xffffffff),
      surface: Color(0xfffff7fc),
      onSurface: Color(0xff000000),
      onSurfaceVariant: Color(0xff28222a),
      outline: Color(0xff474149),
      outlineVariant: Color(0xff474149),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xff342f35),
      inversePrimary: Color(0xfffae5ff),
      primaryFixed: Color(0xff573568),
      onPrimaryFixed: Color(0xffffffff),
      primaryFixedDim: Color(0xff3f1e51),
      onPrimaryFixedVariant: Color(0xffffffff),
      secondaryFixed: Color(0xff4c3e51),
      onSecondaryFixed: Color(0xffffffff),
      secondaryFixedDim: Color(0xff35283a),
      onSecondaryFixedVariant: Color(0xffffffff),
      tertiaryFixed: Color(0xff623737),
      onTertiaryFixed: Color(0xffffffff),
      tertiaryFixedDim: Color(0xff482122),
      onTertiaryFixedVariant: Color(0xffffffff),
      surfaceDim: Color(0xffe0d7df),
      surfaceBright: Color(0xfffff7fc),
      surfaceContainerLowest: Color(0xffffffff),
      surfaceContainerLow: Color(0xfffaf1f8),
      surfaceContainer: Color(0xfff5ebf3),
      surfaceContainerHigh: Color(0xffefe5ed),
      surfaceContainerHighest: Color(0xffe9e0e7),
    );
  }

  ThemeData lightHighContrast() {
    return theme(lightHighContrastScheme());
  }

  static ColorScheme darkScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffe2b7f4),
      surfaceTint: Color(0xffe2b7f4),
      onPrimary: Color(0xff432255),
      primaryContainer: Color(0xff5b396d),
      onPrimaryContainer: Color(0xfff6d9ff),
      secondary: Color(0xffd3c0d8),
      onSecondary: Color(0xff382c3e),
      secondaryContainer: Color(0xff504255),
      onSecondaryContainer: Color(0xfff0dcf4),
      tertiary: Color(0xfff5b7b7),
      onTertiary: Color(0xff4c2526),
      tertiaryContainer: Color(0xff663b3b),
      onTertiaryContainer: Color(0xffffdad9),
      error: Color(0xffffb4ab),
      onError: Color(0xff690005),
      errorContainer: Color(0xff93000a),
      onErrorContainer: Color(0xffffdad6),
      surface: Color(0xff161217),
      onSurface: Color(0xffe9e0e7),
      onSurfaceVariant: Color(0xffcec3ce),
      outline: Color(0xff978e98),
      outlineVariant: Color(0xff4b444d),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe9e0e7),
      inversePrimary: Color(0xff745086),
      primaryFixed: Color(0xfff6d9ff),
      onPrimaryFixed: Color(0xff2c0b3e),
      primaryFixedDim: Color(0xffe2b7f4),
      onPrimaryFixedVariant: Color(0xff5b396d),
      secondaryFixed: Color(0xfff0dcf4),
      onSecondaryFixed: Color(0xff231728),
      secondaryFixedDim: Color(0xffd3c0d8),
      onSecondaryFixedVariant: Color(0xff504255),
      tertiaryFixed: Color(0xffffdad9),
      onTertiaryFixed: Color(0xff331112),
      tertiaryFixedDim: Color(0xfff5b7b7),
      onTertiaryFixedVariant: Color(0xff663b3b),
      surfaceDim: Color(0xff161217),
      surfaceBright: Color(0xff3d383d),
      surfaceContainerLowest: Color(0xff110d12),
      surfaceContainerLow: Color(0xff1e1a1f),
      surfaceContainer: Color(0xff221e24),
      surfaceContainerHigh: Color(0xff2d282e),
      surfaceContainerHighest: Color(0xff383339),
    );
  }

  ThemeData dark() {
    return theme(darkScheme());
  }

  static ColorScheme darkMediumContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xffe6bbf9),
      surfaceTint: Color(0xffe2b7f4),
      onPrimary: Color(0xff260538),
      primaryContainer: Color(0xffa982bc),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xffd8c5dc),
      onSecondary: Color(0xff1d1223),
      secondaryContainer: Color(0xff9c8ba1),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfff9bbbb),
      onTertiary: Color(0xff2c0b0d),
      tertiaryContainer: Color(0xffb98383),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xffffbab1),
      onError: Color(0xff370001),
      errorContainer: Color(0xffff5449),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff161217),
      onSurface: Color(0xfffff9fb),
      onSurfaceVariant: Color(0xffd2c7d2),
      outline: Color(0xffa9a0aa),
      outlineVariant: Color(0xff89808a),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe9e0e7),
      inversePrimary: Color(0xff5c3a6e),
      primaryFixed: Color(0xfff6d9ff),
      onPrimaryFixed: Color(0xff210033),
      primaryFixedDim: Color(0xffe2b7f4),
      onPrimaryFixedVariant: Color(0xff49285b),
      secondaryFixed: Color(0xfff0dcf4),
      onSecondaryFixed: Color(0xff180d1d),
      secondaryFixedDim: Color(0xffd3c0d8),
      onSecondaryFixedVariant: Color(0xff3e3244),
      tertiaryFixed: Color(0xffffdad9),
      onTertiaryFixed: Color(0xff250708),
      tertiaryFixedDim: Color(0xfff5b7b7),
      onTertiaryFixedVariant: Color(0xff532a2b),
      surfaceDim: Color(0xff161217),
      surfaceBright: Color(0xff3d383d),
      surfaceContainerLowest: Color(0xff110d12),
      surfaceContainerLow: Color(0xff1e1a1f),
      surfaceContainer: Color(0xff221e24),
      surfaceContainerHigh: Color(0xff2d282e),
      surfaceContainerHighest: Color(0xff383339),
    );
  }

  ThemeData darkMediumContrast() {
    return theme(darkMediumContrastScheme());
  }

  static ColorScheme darkHighContrastScheme() {
    return const ColorScheme(
      brightness: Brightness.dark,
      primary: Color(0xfffff9fb),
      surfaceTint: Color(0xffe2b7f4),
      onPrimary: Color(0xff000000),
      primaryContainer: Color(0xffe6bbf9),
      onPrimaryContainer: Color(0xff000000),
      secondary: Color(0xfffff9fb),
      onSecondary: Color(0xff000000),
      secondaryContainer: Color(0xffd8c5dc),
      onSecondaryContainer: Color(0xff000000),
      tertiary: Color(0xfffff9f9),
      onTertiary: Color(0xff000000),
      tertiaryContainer: Color(0xfff9bbbb),
      onTertiaryContainer: Color(0xff000000),
      error: Color(0xfffff9f9),
      onError: Color(0xff000000),
      errorContainer: Color(0xffffbab1),
      onErrorContainer: Color(0xff000000),
      surface: Color(0xff161217),
      onSurface: Color(0xffffffff),
      onSurfaceVariant: Color(0xfffff9fb),
      outline: Color(0xffd2c7d2),
      outlineVariant: Color(0xffd2c7d2),
      shadow: Color(0xff000000),
      scrim: Color(0xff000000),
      inverseSurface: Color(0xffe9e0e7),
      inversePrimary: Color(0xff3c1b4e),
      primaryFixed: Color(0xfff8dfff),
      onPrimaryFixed: Color(0xff000000),
      primaryFixedDim: Color(0xffe6bbf9),
      onPrimaryFixedVariant: Color(0xff260538),
      secondaryFixed: Color(0xfff4e0f9),
      onSecondaryFixed: Color(0xff000000),
      secondaryFixedDim: Color(0xffd8c5dc),
      onSecondaryFixedVariant: Color(0xff1d1223),
      tertiaryFixed: Color(0xffffe0df),
      onTertiaryFixed: Color(0xff000000),
      tertiaryFixedDim: Color(0xfff9bbbb),
      onTertiaryFixedVariant: Color(0xff2c0b0d),
      surfaceDim: Color(0xff161217),
      surfaceBright: Color(0xff3d383d),
      surfaceContainerLowest: Color(0xff110d12),
      surfaceContainerLow: Color(0xff1e1a1f),
      surfaceContainer: Color(0xff221e24),
      surfaceContainerHigh: Color(0xff2d282e),
      surfaceContainerHighest: Color(0xff383339),
    );
  }

  ThemeData darkHighContrast() {
    return theme(darkHighContrastScheme());
  }
}
